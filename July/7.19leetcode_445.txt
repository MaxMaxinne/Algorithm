/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        ListNode* p1=l1;
        ListNode* p2=l2;
        ListNode* temp=nullptr;
        //˛šĆëÎťĘý
        while(p1->next||p2->next){
            if(p1->next==nullptr){
                temp=l1;
                l1=new ListNode(0);
                l1->next=temp;
            }else{
                p1=p1->next;
            }
            if(p2->next==nullptr){
                temp=l2;
                l2=new ListNode(0);
                l2->next=temp;
            }else{
                p2=p2->next;
            }
        }
        
        
        int sum=0;
        ListNode* ans=new ListNode(0);
        ListNode* p=ans;
        ListNode* p3=new ListNode(-1);
        ListNode* p4=new ListNode(-1);
        p3->next=l1;
        p4->next=l2;
        while(p3->next){
            sum=p3->next->val+p4->next->val;
            if(sum>=10){
                p->val++;
                sum-=10;
            }
            p->next=new ListNode(sum);
            p=p->next;
            p3=p3->next;
            p4=p4->next;
        }
        
        p=ans;
        while(p->next){
            if(p->next->val>=10){
                p->val++;
                p->next->val-=10;
                p=ans;
                continue;
            }
            p=p->next;
        }
        if(ans->val==0)
            return ans->next;
        else
            return ans;
    }
};
