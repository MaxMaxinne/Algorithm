class Solution {
public:
    int rob(vector<int>& nums) {
        if(nums.size()==0)
            return 0;
        if(nums.size()<=2)
            return *max_element(nums.begin(),nums.end());
        int size=nums.size();
        vector<int> table(size,INT_MIN);
        table[0]=nums[0];
        table[1]=nums[1];
        for(int i=2;i<size;i++){
            for(int j=0;j<i-1;j++){
                if(table[i]<table[j]+nums[i])
                    table[i]=max(table[j]+nums[i],table[i]);
            }
        }
        return max(table[size-1],table[size-2]);
    }
};
class Solution {
public:
    int rob(vector<int>& nums) {
    int prevMax = 0;
    int currMax = 0;
    for (int i=0;i<nums.size();i++) {
        int temp = currMax;
        currMax = max(prevMax + nums[i], currMax);
        prevMax = temp;
    }
    return currMax;
    }
};
