//字符串方法
class Solution {
public:
    void rev(string& s){
        char temp[s.length()];
        for(int i=0;i<s.length()/2;i++){
            temp[i]=s[i];
            s[i]=s[s.length()-i-1];
            s[s.length()-i-1]=temp[i];
        }
    }
    int reverse(int x) {
        bool isNeg=false;
        if(x<0)
            isNeg=true;
        string num=to_string(x);
        rev(num);
        istringstream is(num);
        long long m=0;
        is>>m;
        if(isNeg)
            m=-m;
        if(m>INT_MAX||m<INT_MIN)
            m=0;
        return int(m);
    }
};
//数字解法
class Solution {
public:
    int reverse(int x) {
        int ans=0,temp=0,num=0;
        while(x){
            num=x%10;
            x/=10;
            if(ans>INT_MAX/10||(ans==INT_MAX/10&&num>7))
                return 0;
            if(ans<INT_MIN/10||(ans==INT_MIN/10&&num<-7))
                return 0;
            ans=ans*10+num;
        }
        return ans;
    }
};