/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* oddEvenList(ListNode* head) {
        if(!head)
            return head;
        int index=1;
        ListNode* oddPtr=nullptr,*oddHead=nullptr,*evenPtr=nullptr,*evenHead=nullptr,*p=new ListNode(-1);
        p->next=head;
        while(p->next){
            if(index++%2){
                if(!oddHead){
                    oddHead=p->next;
                    oddPtr=oddHead;
                }else{
                    oddPtr->next=p->next; 
                    oddPtr=oddPtr->next;
                }  
            }else{
                if(!evenHead){
                    evenHead=p->next;
                    evenPtr=evenHead;
                }else{
                    evenPtr->next=p->next;
                    evenPtr=evenPtr->next;
                }
            }
            p=p->next;
        }
        if(evenPtr)//当只有一个元素
            evenPtr->next=NULL;
        if(oddPtr)
            oddPtr->next=evenHead;
        else
            return evenHead;
        return oddHead;
    }
};