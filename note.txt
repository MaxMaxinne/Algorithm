一、	两数相加
1、	数位过多
2、	连续进位
二、3sum(15)
双指针解法，固定一个找两个，也可固定两个找一个使用hash_map（似乎超时？），注意如何使找到的各个三元组不同
Vector size返回值类型是unsigned int！！！
三、链表两两交换节点
递归解法：
递归中我们应该关心的主要有三点：
1、返回值
2、调用单元做了什么
3、终止条件
在本题中：

返回值：交换完成的子链表
调用单元：设需要交换的两个点为 head 和 next，head 连接后面交换完成的子链表，next 连接 head，完成交换
终止条件：head 为空指针或者 next 为空指针，也就是当前无节点或者只有一个节点，无法进行交换
代码
递归解法

class Solution {
    public ListNode swapPairs(ListNode head) {
        if(head == null || head.next == null){
            return head;
        }
        ListNode next = head.next;
        head.next = swapPairs(next.next);
        next.next = head;
        return next;
    }
}

作者：guanpengchn
链接：https://leetcode-cn.com/problems/two-sum/solution/hua-jie-suan-fa-24-liang-liang-jiao-huan-lian-biao/
来源：力扣（LeetCode）
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。
四、链表旋转（leetcode61）
1、递归用的真的差
2、想到先把链表连成环，在到相应位置断开
3、我的同学真滴强
五、奇偶链表（lc_328）
认真读题，主要问题在于学会直接使用链表中的元素而不是新建节点
六、快速排序
1、快排不快什么水平
2、空间复杂度过高
3、如何原地修改？
4、理解分治的思想
七、二叉树的遍历
前序中序后序 DFS BFS
