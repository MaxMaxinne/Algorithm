法一：
class Solution {
public:
    vector<int> rightSideView(TreeNode* root) {
        vector<int> ans;
        if(!root)
            return ans;
        queue<TreeNode*> q;
        q.push(root);
        int size=1,right=0,nsize=1;
        while(!q.empty()){
            size=nsize;
            nsize=0;
            for(;size>0;size--){
                TreeNode* node=q.front();
                q.pop();
                right=node->val;
                if(node->left){
                    q.push(node->left);
                    nsize++;
                }
                if(node->right){
                    q.push(node->right);
                    nsize++;
                }
            }
            ans.push_back(right);
        }
        return ans;
    }
};
法二：
class Solution {
public:
    void getView(vector<int>& ans,int level,TreeNode* node){
        if(!node)
            return;
        if(level>=ans.size())
            ans.push_back(node->val);
        getView(ans,level+1,node->right);
        getView(ans,level+1,node->left);
    }
    vector<int> rightSideView(TreeNode* root) {
        vector<int> ans;
        getView(ans,0,root);
        return ans;
    }
};