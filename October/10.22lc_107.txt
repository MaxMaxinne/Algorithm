class Solution {
public:
    void traversal(vector<vector<int>>& ans,int level,TreeNode* node){
        if(!node)
            return;
        if(node->left==nullptr&&node->right==nullptr){
            ans[level].push_back(node->val);
            return;
        }
        if(ans.size()<level+2)
            ans.push_back(vector<int>());
        traversal(ans,level+1,node->left);
        traversal(ans,level+1,node->right);
        ans[level].push_back(node->val);
    }
    vector<vector<int>> levelOrderBottom(TreeNode* root) {
        vector<vector<int>> ans;
        if(!root)
            return ans;
        ans.push_back(vector<int>());
        traversal(ans,0,root);
        vector<vector<int>>down;
        for(auto v=ans.rbegin();v!=ans.rend();v++){
            down.push_back(*v);
        }
        return down;
    }
};