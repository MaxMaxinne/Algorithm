class Solution {
public:
    int uniquePathsWithObstacles(vector<vector<int>>& obstacleGrid) {
        int rows=obstacleGrid.size(),cols=obstacleGrid[0].size();
        vector<vector<long long>> path(rows,vector<long long>(cols,0));
        if(obstacleGrid[0][0]==1)
            return 0;
        path[0][0]=1;
        for(int i=1;i<cols;i++){
            if(obstacleGrid[0][i]!=1)
                path[0][i]=path[0][i-1];
            else
                path[0][i]=0;
        }
        for(int i=1;i<rows;i++){
            if(obstacleGrid[i][0]!=1)
                path[i][0]=path[i-1][0];
            else
                path[i][0]=0;
        }
        for(int i=1;i<rows;i++){
            for(int j=1;j<cols;j++){
                if((obstacleGrid[i-1][j]==1&&obstacleGrid[i][j-1]==1)||obstacleGrid[i][j]==1)
                    path[i][j]=0;
                else
                    path[i][j]=path[i-1][j]+path[i][j-1];

            }
        }
        return path[rows-1][cols-1];
    }
};